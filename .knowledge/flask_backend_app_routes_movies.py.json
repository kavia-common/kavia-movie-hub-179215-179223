{"is_source_file": true, "format": "Python", "description": "This is a source file defining API endpoints for managing movies within a Flask web application. It includes schema validation, route handling for GET and POST methods, and interactions with a Supabase database to retrieve and insert movie records.", "external_files": ["flask_smorest", "flask.views", "marshmallow", "flask", "app.services.supabase_client"], "external_methods": ["get_supabase", "current_app.logger.info", "current_app.logger.error", "current_app.logger.exception", "current_app.logger.warning", "blp.abort"], "published": ["blp"], "classes": [{"name": "MovieSchema", "description": "Schema for validating and documenting movie data payloads, including fields like id, title, year, overview, photo_url, and created_at."}, {"name": "MovieCreateSchema", "description": "Schema for validating new movie creation requests, including required title and optional year, overview, and photo_url."}], "methods": [{"name": "get(self)", "description": "Handles GET requests to fetch a list of movies from the database, returning the data or aborting on errors.", "scope": "MoviesList", "scopeKind": "class"}, {"name": "post(self, new_movie)", "description": "Handles POST requests to create a new movie record. Validates input, attempts insertion, and retries without photo_url if necessary.", "scope": "MoviesList", "scopeKind": "class"}, {"name": "_insert(payload: dict)", "scope": "MoviesList.post", "scopeKind": "member", "description": "unavailable"}], "calls": ["get_supabase", "supabase.table(\"movies\").select(\"*\").execute", "supabase.table(\"movies\").insert(payload).execute"], "search-terms": ["movies API", "Supabase movie route", "Flask route movies", "MovieSchema", "MovieCreateSchema", "movies.py"], "state": 2, "file_id": 9, "knowledge_revision": 31, "git_revision": "7c4721636b546bd4fa8129938a38899ce3bbb149", "revision_history": [{"24": ""}, {"26": "7bbb4cf223f8112c92efd4f0e62b51737cb3dd4d"}, {"31": "7c4721636b546bd4fa8129938a38899ce3bbb149"}], "ctags": [{"_type": "tag", "name": "MovieCreateSchema", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^class MovieCreateSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MovieSchema", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^class MovieSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MoviesList", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^class MoviesList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_insert", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^        def _insert(payload: dict):$/", "file": true, "language": "Python", "kind": "function", "signature": "(payload: dict)", "scope": "MoviesList.post", "scopeKind": "member"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    created_at = fields.DateTime(dump_only=True, allow_none=True, description=\"Creation timestam/", "language": "Python", "kind": "variable", "scope": "MovieSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "MoviesList", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    id = fields.Int(dump_only=True, description=\"Primary key identifier\")$/", "language": "Python", "kind": "variable", "scope": "MovieSchema", "scopeKind": "class"}, {"_type": "tag", "name": "overview", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    overview = fields.Str(allow_none=True, description=\"Short description of the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "overview", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    overview = fields.Str(allow_none=True, description=\"Short description of the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieSchema", "scopeKind": "class"}, {"_type": "tag", "name": "photo_url", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    photo_url = fields.Str(allow_none=True, description=\"Poster image URL for the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "photo_url", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    photo_url = fields.Str(allow_none=True, description=\"Poster image URL for the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieSchema", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    def post(self, new_movie):$/", "language": "Python", "kind": "member", "signature": "(self, new_movie)", "scope": "MoviesList", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    title = fields.Str(required=True, description=\"Title of the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieSchema", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    title = fields.Str(required=True, validate=validate.Length(min=1), description=\"Title of the/", "language": "Python", "kind": "variable", "scope": "MovieCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "year", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    year = fields.Int(allow_none=True, description=\"Release year of the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "year", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/routes/movies.py", "pattern": "/^    year = fields.Int(allow_none=True, description=\"Release year of the movie\")$/", "language": "Python", "kind": "variable", "scope": "MovieSchema", "scopeKind": "class"}], "hash": "659fd531b8613518749c436f9abdc317", "format-version": 4, "code-base-name": "flask_backend", "filename": "flask_backend/app/routes/movies.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "created_at = fields.DateTime(dump_only=True, allow_none=True, description=\"Creation timestam/", "scope": "MovieSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = fields.Int(dump_only=True, description=\"Primary key identifier\")", "scope": "MovieSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "overview = fields.Str(allow_none=True, description=\"Short description of the movie\")", "scope": "MovieCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "photo_url = fields.Str(allow_none=True, description=\"Poster image URL for the movie\")", "scope": "MovieCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "title = fields.Str(required=True, description=\"Title of the movie\")", "scope": "MovieSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "title = fields.Str(required=True, validate=validate.Length(min=1), description=\"Title of the/", "scope": "MovieCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "year = fields.Int(allow_none=True, description=\"Release year of the movie\")", "scope": "MovieCreateSchema", "scopeKind": "class", "description": "unavailable"}]}
{"is_source_file": true, "format": "Python", "description": "The file initializes a Flask web application with configurations for logging, CORS, and API documentation. It imports blueprints for routing related to health checks, hello endpoint, and movies. It also sets up a custom JSON formatter for structured logging, configures environment-based logging levels, and registers the blueprints with the API.", "external_files": [".routes.health", ".routes.hello", ".routes.movies"], "external_methods": ["flask.Flask", "flask_cors.CORS", "flask_smorest.Api"], "published": ["app"], "classes": [{"name": "JSONFormatter", "description": "Custom logging formatter for structured JSON logs."}], "methods": [{"name": "str format(self, record: logging.LogRecord)", "description": "Formats a log record into a JSON string with structured data.", "scope": "JSONFormatter", "scopeKind": "class"}], "calls": ["logging.StreamHandler()", "CORS(app, resources=...)", "api.register_blueprint(health_blp)", "api.register_blueprint(hello_blp)", "api.register_blueprint(movies_blp)"], "search-terms": ["Flask app initialization", "blueprint registration", "structured JSON logging", "CORS configuration", "API documentation setup"], "state": 2, "file_id": 2, "knowledge_revision": 29, "git_revision": "7bbb4cf223f8112c92efd4f0e62b51737cb3dd4d", "revision_history": [{"12": "4c13703e238bfeca8830372c848c1e507ee1e6c8"}, {"16": "4c13703e238bfeca8830372c848c1e507ee1e6c8"}, {"19": "f3f2d79faee90734d409331d937a7ab80479decc"}, {"20": "f3f2d79faee90734d409331d937a7ab80479decc"}, {"21": "4ffa0ce89f6fe0c8286f770f363b6ea2f21627c4"}, {"25": "7bbb4cf223f8112c92efd4f0e62b51737cb3dd4d"}, {"29": "7bbb4cf223f8112c92efd4f0e62b51737cb3dd4d"}], "ctags": [{"_type": "tag", "name": "JSONFormatter", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^class JSONFormatter(logging.Formatter):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "allowed_origins", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^allowed_origins = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "format", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^    def format(self, record: logging.LogRecord) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, record: logging.LogRecord)", "scope": "JSONFormatter", "scopeKind": "class"}, {"_type": "tag", "name": "handler", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^handler = logging.StreamHandler()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "has_supabase_service_key", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^has_supabase_service_key = bool(os.getenv(\"SUPABASE_SERVICE_KEY\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "has_supabase_url", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^has_supabase_url = bool(os.getenv(\"SUPABASE_URL\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "hello_blp", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^from .routes.hello import blp as hello_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "log_level", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^log_level = os.getenv(\"FLASK_LOG_LEVEL\", \"INFO\").upper()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "movies_blp", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^from .routes.movies import blp as movies_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "root_logger", "path": "/home/kavia/workspace/code-generation/kavia-movie-hub-179215-179223/flask_backend/app/__init__.py", "pattern": "/^root_logger = logging.getLogger()$/", "language": "Python", "kind": "variable"}], "hash": "2b2853ac6e4fa498f314200888297c32", "format-version": 4, "code-base-name": "flask_backend", "filename": "flask_backend/app/__init__.py", "fields": [{"name": "allowed_origins = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "handler = logging.StreamHandler()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "has_supabase_service_key = bool(os.getenv(\"SUPABASE_SERVICE_KEY\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "has_supabase_url = bool(os.getenv(\"SUPABASE_URL\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "log_level = os.getenv(\"FLASK_LOG_LEVEL\", \"INFO\").upper()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "root_logger = logging.getLogger()", "scope": "", "scopeKind": "", "description": "unavailable"}]}